/*
      Main Stylesheet for Blapu New UI
      Author: Jules (AI Assistant)
      Date: 2025-07-10
      Purpose: Enhanced styling for the new Blapu UI, featuring an improved glassmorphism effect
               and robust responsive adjustments to eliminate horizontal overflow on mobile devices.
*/

/* --- DEBUGGING STYLES --- */
/*
  To identify which element is causing horizontal overflow, you can uncomment the following rule.
  This acts as a "visual log" by drawing a red outline around every element.
  The element whose outline extends past the screen edge is the source of the overflow.
  My analysis points to the character animation, which this updated stylesheet corrects.
*/
* {
  box-sizing: border-box;
  /* outline: 1px solid red !important; */ /* Debugging outline commented out */
}
/*


/* CSS Variables Definition */
:root {
  /*
    --scale-factor:
    Controls the overall size of the Blapu character. It is adjusted in media queries
    to responsively scale the character down for smaller screens.
  */
  --scale-factor: 1; /* Default scale for desktop */

  /*
    --crip-walk-*:
    Variables controlling the Blapu character's crip walk animation extents.
    These are adjusted in media queries for responsiveness.
  */
  --crip-walk-start-extreme: -45vw; /* Desktop's 'far left' */
  --crip-walk-mid-1-extreme: -10vw; /* Desktop's re-entry path from left */
  --crip-walk-end-extreme: 25vw;   /* Desktop's 'far right' */
  --crip-walk-mid-2-extreme: -10vw; /* Desktop's re-entry path from right */
}

/* General Page Setup */
html {
  /*
    width: 100%;
    Ensures the html element spans the full width of the viewport.
  */
  width: 100%;
  /*
    height: 100%;
    Ensures the html element always tries to fill the full height of its parent (the window).
  */
  height: 100%;
  /*
    min-height: 100vh;
    Ensures the html element spans at least the full height of the viewport.
  */
  min-height: 100vh;
  /*
    background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
    Mirrors body background to cover overscroll areas.
  */
  background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
  /*
    margin: 0;
    Removes the default browser margin from the html element.
  */
  margin: 0;
  /*
    padding: 0;
    Removes any padding from the html element.
  */
  padding: 0;
  /*
    overflow-x: hidden;
    Crucial fix: Prevents horizontal scrollbars from appearing for the entire page,
    effectively containing any content (like the character animation) that moves outside the viewport.
  */
  overflow-x: hidden;
  /*
    font-size: 100%;
    Establishes a base font size, allowing `rem` units to be responsive to user browser settings.
  */
  font-size: 100%;
  box-sizing: border-box;
}

body {
  /*
    width: 100%;
    Ensures the body takes up the full width of its container (html).
  */
  width: 100%;
  /*
    height: 100%;
    Ensures the body tries to fill the full height of its parent (html).
  */
  height: 100%;
  /*
    min-height: 100vh;
    Ensures the body spans at least the full height of the viewport.
  */
  min-height: 100vh;
  /*
    font-family: ...;
    Sets the default font stack for the entire page, with fallbacks.
  */
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  /*
    margin: 0;
    Removes the default browser margin from the body.
  */
  margin: 0;
  /*
    padding: 0.625rem;
    Sets a base padding for the page content area (10px).
  */
  padding: 0.625rem;
  /*
    color: #fff;
    Sets the default text color to white for light mode.
  */
  color: #fff;
  /*
    background: linear-gradient(...);
    Defines the default (light mode) background gradient for the page.
  */
  background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
  /*
    position: relative;
    Establishes a positioning context for absolutely positioned child elements.
  */
  position: relative;
  /*
    overflow-x: hidden;
    Secondary safeguard: Ensures the body itself also hides overflowing content.
    This contains the character animation which is a direct child of the body.
  */
  overflow-x: hidden;
  box-sizing: border-box;
}

/* Decorative Animated Blobs (Background) */

/*
  #animated-blapu-bg:
  This container for the blobs was previously causing issues with `vw` units.
  It is now set to 100% width to safely fill its parent without causing overflow.
*/
#animated-blapu-bg {
  /*
    width: 100% !important;
    Overrides any inline style to ensure the background container never exceeds the body width.
  */
  width: 100% !important;
}

/* Keyframes for blob animation */
@keyframes dance {
  /*
    Defines the fluid, morphing animation for the background blobs.
  */
  0%, 100% {
    transform: translate(0, 0) rotate(0deg) scale(1);
    border-radius: 40% 60% 70% 30% / 40% 50% 60% 50%;
  }
  25% {
    transform: translate(20px, -15px) rotate(5deg) scale(1.05);
    border-radius: 30% 70% 50% 50% / 50% 40% 50% 60%;
  }
  50% {
    transform: translate(-10px, 10px) rotate(-5deg) scale(1);
    border-radius: 50% 50% 30% 70% / 40% 60% 30% 70%;
  }
  75% {
    transform: translate(10px, 5px) rotate(3deg) scale(1.03);
    border-radius: 60% 40% 70% 30% / 50% 50% 40% 60%;
  }
}

/* Animation Toggle Feature */
body.no-animations .character-container,
body.no-animations .blapu-blob,
body.no-animations .arm,
body.no-animations .leg {
  /*
    animation: none !important;
    Disables all animations when the .no-animations class is on the body.
  */
  animation: none !important;
}

/* Dark Mode Styles */
body.dark-mode {
  /*
    background: linear-gradient(...);
    Sets the background gradient for dark mode.
  */
  background: linear-gradient(135deg, #000000 0%, #300030 70%, #4B0082 100%);
  /*
    color: #fff;
    Ensures default text color is white in dark mode.
  */
  color: #fff;
}

body.dark-mode .glass-panel {
  /*
    border-color: rgba(255, 255, 255, 0.1);
    Uses a softer, less prominent border for the glass panel in dark mode.
  */
  border-color: rgba(255, 255, 255, 0.1);
}

body.dark-mode .blapu-blob {
  /*
    opacity: 0.6;
    Sets the base opacity for background blobs in dark mode.
  */
  opacity: 0.6;
}
body.dark-mode .blob-1 {
  /*
    background: radial-gradient(...);
    Defines the color and gradient for blob-1 in dark mode.
  */
  background: radial-gradient(circle at center, rgba(220, 100, 255, 0.6), rgba(150, 50, 180, 0.8));
}
body.dark-mode .blob-2 {
  /*
    background: radial-gradient(...);
    Defines the color and gradient for blob-2 in dark mode.
  */
  background: radial-gradient(circle at center, rgba(80, 120, 255, 0.6), rgba(40, 70, 190, 0.8));
}
body.dark-mode .blob-3 {
  /*
    background: radial-gradient(...);
    Defines the color and gradient for blob-3 in dark mode.
  */
  background: radial-gradient(circle at center, rgba(160, 120, 255, 0.55), rgba(100, 80, 190, 0.75));
}

/* Individual blob styling using CSS Custom Properties */
.blapu-blob {
  /*
    position: absolute;
    Positions the blobs relative to the body.
  */
  position: absolute;
  /*
    filter: blur(0.5rem);
    Applies a blur effect to create a soft, out-of-focus look.
  */
  filter: blur(0.5rem);
  /*
    border-radius: ...;
    Sets the initial organic shape of the blob.
  */
  border-radius: 40% 60% 70% 30% / 40% 50% 60% 50%;
  /*
    z-index: 0;
    Places the blobs in the background, behind other content.
  */
  z-index: 0;

  /* Default custom property values */
  --blob-top: 0%;
  --blob-left: 0%;
  --blob-width: 20vmin;
  --blob-height: 20vmin;
  --blob-anim-duration: 20s;
  --blob-anim-delay: 0s;
  --blob-opacity: 0.5;

  /*
    Applying custom properties to allow for easy variation between blobs.
  */
  top: var(--blob-top);
  left: var(--blob-left);
  width: var(--blob-width);
  height: var(--blob-height);
  animation-name: dance;
  animation-duration: var(--blob-anim-duration);
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-delay: var(--blob-anim-delay);
  opacity: var(--blob-opacity);

  /*
    background: radial-gradient(...);
    Sets the default light-mode background color for blobs.
  */
  background: radial-gradient(circle at center, rgba(0, 123, 255, 0.4), rgba(0, 80, 180, 0.6));
}

.blob-1 {
  /*
    Custom properties to define the specific appearance and animation of the first blob.
  */
  --blob-top: 10%;
  --blob-left: 5%;
  --blob-width: 30vmin;
  --blob-height: 28vmin;
  --blob-anim-duration: 22s;
  --blob-anim-delay: -2s;
  --blob-opacity: 0.4;
}

.blob-2 {
  /*
    Custom properties to define the specific appearance and animation of the second blob.
  */
  --blob-top: 55%;
  --blob-left: 75%;
  --blob-width: 22vmin;
  --blob-height: 25vmin;
  --blob-anim-duration: 15s;
  --blob-anim-delay: -7s;
  --blob-opacity: 0.35;
}

.blob-3 {
  /*
    Custom properties to define the specific appearance and animation of the third blob.
  */
  --blob-top: 25%;
  --blob-left: 45%;
  --blob-width: 18vmin;
  --blob-height: 17vmin;
  --blob-anim-duration: 25s;
  --blob-anim-delay: -12s;
  --blob-opacity: 0.45;
}

/* Blapu Character Animation Keyframes */
@keyframes detailedCripWalk {
  /*
    Defines the complex side-to-side "crip walk" animation for the character,
    including pauses and hops for a more dynamic feel.
  */
  0%   { transform: translateX(0vw) translateY(0vmin) rotate(-5deg); }
  18%  { transform: translateX(var(--crip-walk-start-extreme)) translateY(0vmin) rotate(-15deg); }
  20%  { transform: translateX(var(--crip-walk-start-extreme)) translateY(-3vmin) rotate(-10deg); }
  22%  { transform: translateX(var(--crip-walk-start-extreme)) translateY(0vmin) rotate(-15deg); }
  36%  { transform: translateX(var(--crip-walk-mid-1-extreme)) translateY(-5.5vmin) rotate(0deg); }
  50%  { transform: translateX(0vw) translateY(0vmin) rotate(5deg); }
  68%  { transform: translateX(var(--crip-walk-end-extreme)) translateY(0vmin) rotate(15deg); }
  70%  { transform: translateX(var(--crip-walk-end-extreme)) translateY(-3vmin) rotate(10deg); }
  72%  { transform: translateX(var(--crip-walk-end-extreme)) translateY(0vmin) rotate(15deg); }
  86%  { transform: translateX(var(--crip-walk-mid-2-extreme)) translateY(-5.5vmin) rotate(0deg); }
  100% { transform: translateX(0vw) translateY(0vmin) rotate(-5deg); }
}

@keyframes blapuArmSwing {
  /* Defines the swinging motion for the left arm. */
  0%, 100% { transform: rotate(20deg);}
  50% { transform: rotate(-20deg);}
}
@keyframes blapuArmSwingR {
  /* Defines the swinging motion for the right arm. */
  0%, 100% { transform: rotate(-20deg);}
  50% { transform: rotate(20deg);}
}
@keyframes blapuLegSwing {
  /* Defines the swinging motion for the left leg. */
  0%, 100% { transform: rotate(-15deg);}
  50% { transform: rotate(15deg);}
}
@keyframes blapuLegSwingR {
  /* Defines the swinging motion for the right leg. */
  0%, 100% { transform: rotate(15deg);}
  50% { transform: rotate(-15deg);}
}

/* Blapu Character Blueprint Styles */
.character-container {
  /*
    position: absolute;
    Positions the character relative to the body.
  */
  position: absolute;
  /*
    bottom: 1%;
    Places the character near the bottom of the viewport.
  */
  bottom: 1%;
  /*
    left: 50%;
    Horizontally centers the character's starting point.
  */
  left: 50%;
  /*
    transform: translateX(-50%);
    Fine-tunes the horizontal centering.
  */
  transform: translateX(-50%);
  /*
    width: calc(...);
    Sets a responsive width based on a base rem value and the --scale-factor variable.
  */
  width: calc(15.625rem * var(--scale-factor));
  /*
    height: calc(...);
    Sets a responsive height based on a base rem value and the --scale-factor variable.
  */
  height: calc(20.3125rem * var(--scale-factor));
  /*
    z-index: 1;
    Places the character above the blobs but below the main content panel.
  */
  z-index: 1;
  /*
    filter: blur(...);
    Applies a blur effect, adjusted in media queries.
  */
  filter: blur(0.3125rem);
  /*
    animation: detailedCripWalk ...;
    Applies the main movement animation.
  */
  animation: detailedCripWalk 20s infinite ease-in-out;
  /*
    pointer-events: auto;
    Makes the character interactive (e.g., for hover effects).
  */
  pointer-events: auto;
  /*
    cursor: pointer;
    Shows a pointer cursor on hover to indicate interactivity.
  */
  cursor: pointer;
  /*
    user-select: none;
    Prevents the character from being selected like text.
  */
  user-select: none;
  /*
    will-change: transform;
    A performance hint for the browser, indicating that the transform property will be animated.
  */
  will-change: transform;
  box-sizing: border-box;
}
.character-container:hover {
  /*
    animation-play-state: paused;
    Pauses the character's movement animation on hover.
  */
  animation-play-state: paused;
}

/*
  Individual parts of the Blapu character (Head, Ears, Eyes, etc.)
  All dimensions use `calc()` with the `--scale-factor` variable for consistent, maintainable scaling.
*/
.head {
  position: absolute;
  top: calc(1.5625rem * var(--scale-factor));
  left: 50%;
  transform: translateX(-50%);
  width: calc(8.75rem * var(--scale-factor));
  height: calc(7.8125rem * var(--scale-factor));
  background: #1e50ff;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  border-radius: 50% 50% 45% 45% / 65% 65% 40% 40%;
  z-index: 5;
}
.ear {
  position: absolute;
  top: calc(0.46875rem * var(--scale-factor));
  width: calc(2.1875rem * var(--scale-factor));
  height: calc(2.8125rem * var(--scale-factor));
  background: #1e50ff;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  z-index: 4;
}
.ear.left {
  left: calc(3.125rem * var(--scale-factor));
  border-radius: 80% 20% 5% 5% / 100% 20% 5% 5%;
  transform: rotate(-15deg);
}
.ear.right {
  right: calc(3.125rem * var(--scale-factor));
  border-radius: 20% 80% 5% 5% / 20% 100% 5% 5%;
  transform: rotate(15deg);
}
.ear::after {
  content: '';
  position: absolute;
  top: calc(0.46875rem * var(--scale-factor));
  left: 50%;
  transform: translateX(-50%);
  width: calc(1.25rem * var(--scale-factor));
  height: calc(1.5625rem * var(--scale-factor));
  background: #ff47b6;
  border-radius: 50% / 60% 60% 40% 40%;
}
.eyes {
  position: absolute;
  top: calc(2.8125rem * var(--scale-factor));
  width: 100%;
  display: flex;
  justify-content: center;
  gap: calc(0.15625rem * var(--scale-factor));
}
.eye {
  width: calc(3.4375rem * var(--scale-factor));
  height: calc(2.8125rem * var(--scale-factor));
  background: #fff;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  border-radius: 50%;
  position: relative;
  overflow: hidden;
}
.eye::before {
  content: '';
  position: absolute;
  top: calc(-1.5625rem * var(--scale-factor));
  left: calc(-0.3125rem * var(--scale-factor));
  width: calc(4.0625rem * var(--scale-factor));
  height: calc(3.125rem * var(--scale-factor));
  background: #1e50ff;
  border-bottom-width: calc(0.09375rem * var(--scale-factor));
  border-bottom-style: solid;
  border-bottom-color: #000;
  border-radius: 50%;
}
.pupil {
  position: absolute;
  bottom: calc(0.46875rem * var(--scale-factor));
  left: 50%;
  transform: translateX(-50%);
  width: calc(1.09375rem * var(--scale-factor));
  height: calc(1.25rem * var(--scale-factor));
  background: #000;
  border-radius: 50%;
}
.pupil::after {
  content: '';
  position: absolute;
  top: calc(0.25rem * var(--scale-factor));
  left: calc(0.25rem * var(--scale-factor));
  width: calc(0.3125rem * var(--scale-factor));
  height: calc(0.3125rem * var(--scale-factor));
  background: #fff;
  border-radius: 50%;
}
.lips {
  position: absolute;
  top: calc(5.9375rem * var(--scale-factor));
  left: 50%;
  transform: translateX(-50%);
  width: calc(6.25rem * var(--scale-factor));
  height: calc(1.40625rem * var(--scale-factor));
  background: #ff47b6;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  border-radius: 30% 30% 50% 50% / 30% 30% 100% 100%;
}
.body {
  position: absolute;
  top: calc(9.3125rem * var(--scale-factor));
  left: 50%;
  transform: translateX(-50%);
  width: calc(7.5rem * var(--scale-factor));
  height: calc(5.625rem * var(--scale-factor));
  background: #6d4c41;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  border-top-style: none;
  border-radius: 10% 10% calc(0.625rem * var(--scale-factor)) calc(0.625rem * var(--scale-factor));
  z-index: 3;
}
.neck-line {
  position: absolute;
  top: calc(9.3125rem * var(--scale-factor));
  left: 50%;
  transform: translateX(-50%);
  width: calc(3.125rem * var(--scale-factor));
  height: calc(0.09375rem * var(--scale-factor));
  background: #000;
  z-index: 6;
}
.arm {
  position: absolute;
  top: calc(9.6875rem * var(--scale-factor));
  width: calc(1.875rem * var(--scale-factor));
  height: calc(4.0625rem * var(--scale-factor));
  background: #6d4c41;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  z-index: 2;
  transform-origin: top center;
}
.arm.left {
  left: calc(2.1875rem * var(--scale-factor));
  border-radius: calc(0.9375rem * var(--scale-factor)) calc(0.3125rem * var(--scale-factor)) calc(0.3125rem * var(--scale-factor)) calc(0.9375rem * var(--scale-factor));
  animation: blapuArmSwing 3s infinite ease-in-out alternate;
}
.arm.right {
  right: calc(2.1875rem * var(--scale-factor));
  border-radius: calc(0.3125rem * var(--scale-factor)) calc(0.9375rem * var(--scale-factor)) calc(0.9375rem * var(--scale-factor)) calc(0.3125rem * var(--scale-factor));
  animation: blapuArmSwingR 3s infinite ease-in-out alternate;
}
.hand {
  position: absolute;
  top: calc(3.4375rem * var(--scale-factor));
  width: calc(1.875rem * var(--scale-factor));
  height: calc(1.875rem * var(--scale-factor));
  background: #1e50ff;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
}
.arm.left .hand { left: calc(-0.46875rem * var(--scale-factor)); }
.arm.right .hand { right: calc(-0.46875rem * var(--scale-factor)); }
.legs {
  position: absolute;
  bottom: calc(2.1875rem * var(--scale-factor));
  left: 50%;
  transform: translateX(-50%);
  width: calc(8.75rem * var(--scale-factor));
  height: calc(3.75rem * var(--scale-factor));
  z-index: 1;
}
.leg {
  position: absolute;
  bottom: 0;
  width: calc(3.75rem * var(--scale-factor));
  height: calc(3.75rem * var(--scale-factor));
  background: #bdc3c7;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  transform-origin: top center;
}
.leg.left {
  left: 0;
  border-radius: calc(1.25rem * var(--scale-factor)) calc(0.3125rem * var(--scale-factor)) 0 0;
  animation: blapuLegSwing 2s infinite ease-in-out;
}
.leg.right {
  right: 0;
  border-radius: calc(0.3125rem * var(--scale-factor)) calc(1.25rem * var(--scale-factor)) 0 0;
  animation: blapuLegSwingR 2s infinite ease-in-out;
}
.shoe {
  position: absolute;
  bottom: calc(-1.5625rem * var(--scale-factor));
  width: calc(4.0625rem * var(--scale-factor));
  height: calc(2.5rem * var(--scale-factor));
  background-color: #e74c3c;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  z-index: 2;
}
.leg.left .shoe {
  left: calc(-0.15625rem * var(--scale-factor));
  border-radius: calc(0.9375rem * var(--scale-factor)) calc(0.3125rem * var(--scale-factor)) calc(0.46875rem * var(--scale-factor)) calc(0.46875rem * var(--scale-factor));
}
.leg.right .shoe {
  right: calc(-0.15625rem * var(--scale-factor));
  border-radius: calc(0.3125rem * var(--scale-factor)) calc(0.9375rem * var(--scale-factor)) calc(0.46875rem * var(--scale-factor)) calc(0.46875rem * var(--scale-factor));
}
.shoe::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: calc(0.78125rem * var(--scale-factor));
  background: #fff;
  border-top-width: calc(0.09375rem * var(--scale-factor));
  border-top-style: solid;
  border-top-color: #000;
  border-radius: 0 0 calc(0.375rem * var(--scale-factor)) calc(0.375rem * var(--scale-factor));
}
.shoe::after {
  content: '';
  position: absolute;
  top: calc(0.46875rem * var(--scale-factor));
  left: calc(0.78125rem * var(--scale-factor));
  width: calc(1.09375rem * var(--scale-factor));
  height: calc(0.9375rem * var(--scale-factor));
  background: #fff;
  border-width: calc(0.09375rem * var(--scale-factor));
  border-style: solid;
  border-color: #000;
  border-radius: calc(0.3125rem * var(--scale-factor));
}

/* Main Content Glass Panel Styles - ENHANCED */
.glass-panel {
  /*
    width: 90%;
    Sets a responsive width relative to the parent container.
  */
  width: 90%;
  /*
    max-width: 50rem;
    Sets a maximum width to maintain readability on large screens.
  */
  max-width: 50rem;
  /*
    margin: ...;
    Centers the panel and provides vertical spacing.
  */
  margin: 2.5rem auto 1.875rem auto;
  /*
    overflow: hidden;
    Essential for containing pseudo-elements and ensuring rounded corners are applied correctly.
  */
  overflow: hidden;
  /*
    padding: 0.9375rem;
    Sets the inner spacing of the panel.
  */
  padding: 0.9375rem;
  /*
    text-align: center;
    Center-aligns inline content like text.
  */
  text-align: center;
  /*
    box-sizing: border-box;
    Ensures padding and border do not add to the element's total width.
  */
  box-sizing: border-box;
  /*
    z-index: 10;
    Ensures the panel is stacked above background elements.
  */
  z-index: 10;
  /*
    position: relative;
    Establishes a positioning context for its pseudo-elements.
  */
  position: relative;
  /*
    background: rgba(255, 255, 255, 0.05);
    Sets a very transparent base background color.
  */
  background: rgba(255, 255, 255, 0.05);
  /*
    backdrop-filter: ...;
    The core of the glass effect, blurring the content behind the panel.
  */
  backdrop-filter: blur(0.625rem) saturate(140%);
  /*
    -webkit-backdrop-filter: ...;
    Vendor prefix for Safari compatibility.
  */
  -webkit-backdrop-filter: blur(0.625rem) saturate(140%);
  /*
    border-radius: 1.5rem;
    Rounds the corners of the panel.
  */
  border-radius: 1.5rem;
  /*
    border: ...;
    Defines a subtle border to help define the panel's edge.
  */
  border: 1px solid rgba(255, 255, 255, 0.2);
  /*
    box-shadow: ...;
    ENHANCED: Adds multiple shadow layers for a more realistic, three-dimensional effect.
    Includes a main shadow, a subtle top highlight, and a soft inner shadow.
  */
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.3),
              inset 0 1px 1px rgba(255, 255, 255, 0.1),
              inset 0 -1px 1px rgba(255, 255, 255, 0.05);
}

.glass-panel::before {
  /*
    ENHANCED: This pseudo-element creates a subtle, glossy sheen on the glass,
    simulating a light source reflecting off the surface to add depth.
  */
  content: '';
  /*
    position: absolute;
    Positions the sheen inside the panel.
  */
  position: absolute;
  /*
    top, left, right, bottom: 0;
    Stretches the sheen to cover the entire panel.
  */
  top: 0; left: 0; right: 0; bottom: 0;
  /*
    background: radial-gradient(...);
    Creates a soft, white-to-transparent radial gradient positioned at the top-left.
  */
  background: radial-gradient(circle at 0% 0%, rgba(255, 255, 255, 0.15), transparent 50%);
  /*
    border-radius: inherit;
    Ensures the sheen has the same rounded corners as the panel.
  */
  border-radius: inherit;
  /*
    z-index: -1;
    Places the sheen behind the panel's content but above its background.
  */
  z-index: -1;
  /*
    pointer-events: none;
    Ensures the sheen does not interfere with mouse interactions.
  */
  pointer-events: none;
}

/* Hero Header and Navigation Links within Glass Panel */
.hero-header {
  /*
    display: flex;
    Enables flexbox for precise alignment and spacing of header items.
  */
  display: flex;
  /*
    align-items: center;
    Vertically aligns all items in the header.
  */
  align-items: center;
  /*
    justify-content: space-between;
    Distributes space so the logo is central and links are on the sides.
  */
  justify-content: space-between;
  /*
    flex-wrap: wrap;
    Allows items to wrap onto the next line on smaller screens.
  */
  flex-wrap: wrap;
  /*
    margin-bottom: 0.9375rem;
    Adds space below the header.
  */
  margin-bottom: 0.9375rem;
  /*
    gap: 0.625rem;
    Sets the space between header items.
  */
  gap: 0.625rem;
}

/* Base styling for all links in hero header and footer navigation. */
.hero-header .hero-link, .footer-nav a {
  color: #e0e0e0;
  text-decoration: none;
  font-size: clamp(0.8em, 2.2vw, 0.9em);
  padding: 0.5rem 0.75rem;
  border-radius: 0.5rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.2),
              inset 1px 1px 1px rgba(255,255,255,0.2),
              inset -1px -1px 1px rgba(0,0,0,0.1);
  transition: all 0.2s ease-out;
  text-shadow: 0 1px 1px rgba(0,0,0,0.2);
  text-align: center;
}
.hero-header .hero-link:focus, .footer-nav a:focus {
  outline: 0.125rem solid #fff;
  outline-offset: 0.125rem;
  background: rgba(255, 255, 255, 0.2);
}

/* Specific styling for the side hero links (LP & PowApp). */
.hero-header .hero-link-left,
.hero-header .hero-link-right {
  flex: 1;
  min-width: 15vw;
  padding: 0.375rem 0.625rem;
  font-size: clamp(0.7em, 1.8vw, 0.8em);
  min-height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Styling for the Blapu logo image link in the hero header. */
.hero-header .blapu-logo-link {
  flex-shrink: 0;
  padding: 0;
  background: transparent;
  border: none;
  box-shadow: none;
}
.hero-header .blapu-logo-link img {
  width: clamp(4.375rem, 18vw, 5.625rem);
  height: clamp(4.375rem, 18vw, 5.625rem);
  display: block;
}

/* Hover and active effects for links */
.hero-header .hero-link:hover, .footer-nav a:hover {
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 0.375rem 0.75rem rgba(0,0,0,0.3),
              inset 1px 1px 1px rgba(255,255,255,0.3),
              inset -1px -1px 1px rgba(0,0,0,0.15);
  transform: translateY(-0.125rem);
  color: #fff;
}
.hero-header .hero-link:active, .footer-nav a:active {
  background: rgba(255, 255, 255, 0.05);
  box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.2),
              inset 1px 1px 2px rgba(0,0,0,0.2);
  transform: translateY(1px);
}

/* Typography within Glass Panel */
h1 {
  font-size: clamp(1.8em, 5vw, 2.5em);
  margin-top: 0.625rem;
  margin-bottom: 0.9375rem;
  color: #f0f0f0;
  text-shadow: 1px 1px 3px rgba(0,0,0,0.3);
}
p {
  font-size: clamp(1em, 3vw, 1.1em);
  line-height: 1.6;
  margin-bottom: 1.5625rem;
  color: #e0e0e0;
}
.rotating-quote {
  /*
    display: none;
    Hides all quotes by default; JavaScript is expected to show one.
  */
  display: none;
}

/* Embedded Widgets (Vestige Charts/Swap) */
.widget-container {
  display: flex;
  flex-direction: column;
  gap: 1.5625rem;
  margin-top: 1.25rem;
  width: 100%;
}
.widget {
  position: relative;
  background: rgba(255, 255, 255, 0.04);
  backdrop-filter: blur(0.375rem) saturate(140%);
  -webkit-backdrop-filter: blur(0.375rem) saturate(140%);
  border-radius: 1rem;
  padding: 0.9375rem;
  border: 1px solid rgba(255, 255, 255, 0.15);
  box-shadow: 0 0.25rem 0.9375rem rgba(0, 0, 0, 0.2),
              inset 0 1px 3px rgba(255, 255, 255, 0.08);
  width: 100%;
  box-sizing: border-box;
}
.widget::before {
  content: 'Loading...';
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  font-size: 1.25rem;
  z-index: 1;
  padding: 1rem 1.5rem;
  background: rgba(0,0,0,0.5);
  border-radius: 0.5rem;
}
.widget.loading iframe {
  filter: blur(0.25rem);
}
.widget.loading::before {
  display: block;
}
.widget iframe {
  width: 100%;
  display: block;
  border: none;
  border-radius: 0.75rem;
  min-height: 20.625rem;
}
.widget-swap iframe {
  display: block;
  width: 100%;
  min-height: 23.75rem;
  border: none;
  border-radius: 0.75rem;
}

/* Footer Navigation within Glass Panel */
.footer-nav {
  margin-top: 1.875rem;
  padding: 0.625rem 0.9375rem;
  background: rgba(0, 0, 0, 0.15);
  border-radius: 0.625rem;
  width: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.625rem 0.9375rem;
}
.footer-nav .separator {
  color: rgba(255,255,255,0.4);
  align-self: center;
}

/* Responsive Design Adjustments using Media Queries */

/* For tablets and smaller desktops (max-width: 700px) */
@media (max-width: 43.75rem) {
  .blob-3 {
    /*
      display: none;
      Hides the third blob on smaller screens to reduce clutter.
    */
    display: none;
  }
  .character-container {
    /*
      filter: blur(...);
      Reduces the blur on the character for better clarity on smaller screens.
    */
    filter: blur(0.1875rem);
  }
  :root {
    /*
      --scale-factor: 0.64;
      Reduces the character's size by setting the scale factor to 0.64.
    */
    --scale-factor: 0.64;
    /*
      Adjusts the horizontal travel distance of the character for this screen size.
    */
    --crip-walk-start-extreme: -60vw;
    --crip-walk-mid-1-extreme: -12vw;
    --crip-walk-end-extreme: 60vw;
    --crip-walk-mid-2-extreme: 12vw;
  }
}

/* For small tablets and large mobile phones (max-width: 520px) */
@media (max-width: 32.5rem) {
  body {
    /*
      padding: ...;
      Reduces body padding on small screens to maximize content space.
    */
    padding: 0.3125rem 0.1875rem; /* Keep as is, already small */
  }
  .glass-panel {
    /*
      Further reduces padding and margins for a more compact layout on small screens.
    */
    padding: 0.3rem; /* Slightly reduced from 0.375rem */
    margin-top: 0.125rem; /* Keep as is */
    margin-bottom: 0.2rem; /* Slightly reduced from 0.25rem */
    /*
      width: 98%;
      Ensures the panel uses almost the full screen width.
    */
    width: 98%;
  }

  /* Mobile Hero Section Adjustments */
  .hero-header {
    /*
      flex-direction: column;
      Stacks header items vertically for a mobile-friendly layout.
    */
    flex-direction: column;
    /*
      align-items: center;
      Horizontally centers the stacked items.
    */
    align-items: center;
    /*
      gap: 0.25rem; /* Reduced from 0.375rem */
      Reduces the gap between stacked items.
    */
    gap: 0.25rem;
    /*
      margin-bottom: 0.375rem; /* Reduced from 0.5rem */
      Reduces the space below the header.
    */
    margin-bottom: 0.375rem;
  }

  .glass-panel p {
    /*
      margin-bottom: 0.5rem; /* Reduced from 0.75rem */
      Reduces the margin below paragraphs on mobile.
    */
    margin-bottom: 0.5rem;
  }

  /* Mobile Footer Navigation Adjustments */
  .footer-nav {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 0.4rem; /* Slightly reduced from 0.5rem */
    margin-top: 0.75rem; /* Reduced from 1rem */
    padding: 0.3rem 0.4rem; /* Slightly reduced from 0.375rem 0.5rem */
  }
  .footer-nav a {
    flex-grow: 0;
    flex-basis: auto;
  }
  .footer-nav .separator {
    display: inline;
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.8rem;
  }

  /* Mobile Button and Font Adjustments */
  .hero-header .hero-link, .footer-nav a {
    /*
      font-size: clamp(...);
      Uses a responsive font size for all buttons.
    */
    font-size: clamp(0.75em, 2vw, 0.85em);
  }
  .footer-nav a {
    /*
      padding-top, padding-bottom: 8px;
      Sets a standard padding for footer links on mobile.
    */
    padding-top: 8px;
    padding-bottom: 8px;
  }

  /* Mobile Widget Adjustments */
  .widget {
    /*
      padding-left, padding-right: 0.5rem;
      Reduces horizontal padding inside widgets to save space.
    */
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
  .character-container {
    /*
      filter: blur(0.25rem);
      Further reduces character blur.
    */
    filter: blur(0.25rem); /* Keep as is */
  }
  .widget-container {
    /*
      gap: 0.375rem; /* Reduced from 0.5rem */
      Reduces the gap between widgets.
    */
    gap: 0.375rem;
    /*
      margin-top: 0.375rem; /* Reduced from 0.5rem */
      Reduces the top margin of the widget container.
    */
    margin-top: 0.375rem;
  }
  :root {
    /*
      --scale-factor: 0.4;
      Scales the character down further for this breakpoint.
    */
    --scale-factor: 0.4;
    /*
      Adjusts the character's horizontal travel distance.
    */
    --crip-walk-start-extreme: -50vw;
    --crip-walk-mid-1-extreme: -10vw;
    --crip-walk-end-extreme: 50vw;
    --crip-walk-mid-2-extreme: 10vw;
  }
}

/* For very small mobile screens (max-width: 380px) */
@media (max-width: 23.75rem) { /* 380px -> 23.75rem */
  /*
    REFACTORED: This entire section now uses the --scale-factor variable for consistency
    and maintainability, removing all hardcoded pixel values for the character.
  */
  .character-container {
    /*
      filter: blur(0.25rem);
      Sets a minimal blur for the smallest screens.
    */
    filter: blur(0.25rem);
  }
  :root {
    /*
      --scale-factor: 0.3;
      Sets the smallest scale factor for the character.
    */
    --scale-factor: 0.3;
    /*
      Adjusts the character's horizontal travel for the smallest screens.
    */
    --crip-walk-start-extreme: -70vw;
    --crip-walk-mid-1-extreme: -15vw;
    --crip-walk-end-extreme: 70vw;
    --crip-walk-mid-2-extreme: 15vw;
  }

  /* Further compactness for very small screens */
  .glass-panel {
    padding: 0.2rem;
    margin-bottom: 0.15rem;
  }
  .hero-header {
    gap: 0.15rem;
    margin-bottom: 0.2rem;
  }
  .glass-panel p {
    margin-bottom: 0.3rem;
  }
  .widget-container {
    gap: 0.2rem;
    margin-top: 0.2rem;
  }
  .footer-nav {
    margin-top: 0.4rem;
    padding: 0.2rem 0.3rem;
    gap: 0.3rem;
  }
}
